{
  "symbols": [
    {
      "name": "", 
      "debugName": "@This()", 
      "declNode": "root", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": {"s_comptime":false,"s_const":true,"s_member":false,"s_fn":false,"s_catch_param":false}, 
      "references": [
        
      ], 
      "members": [1], 
      "exports": [], 
      
    }, 
    {
      "name": "Foo", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": {"s_comptime":false,"s_const":false,"s_member":false,"s_fn":false,"s_catch_param":false}, 
      "references": [
        {"symbol":1,"scope":2,"node":"identifier","identifier":"Foo","flags":{"read":true,"write":false,"call":false,"type":false,"member":false,"_":0}}, 
        {"symbol":1,"scope":4,"node":"identifier","identifier":"Foo","flags":{"read":true,"write":false,"call":false,"type":false,"member":false,"_":0}}, 
        
      ], 
      "members": [2,3,4,5,6], 
      "exports": [], 
      
    }, 
    {
      "name": "a", 
      "debugName": "", 
      "declNode": "container_field_init", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": {"s_comptime":false,"s_const":false,"s_member":true,"s_fn":false,"s_catch_param":false}, 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "b", 
      "debugName": "", 
      "declNode": "container_field_init", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": {"s_comptime":false,"s_const":false,"s_member":true,"s_fn":false,"s_catch_param":false}, 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "c", 
      "debugName": "", 
      "declNode": "container_field_init", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": {"s_comptime":false,"s_const":false,"s_member":true,"s_fn":false,"s_catch_param":false}, 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "Bar", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": {"s_comptime":false,"s_const":false,"s_member":false,"s_fn":false,"s_catch_param":false}, 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "isNotA", 
      "debugName": "", 
      "declNode": "fn_decl", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": {"s_comptime":false,"s_const":false,"s_member":false,"s_fn":true,"s_catch_param":false}, 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
  ], 
  "unresolvedReferences": [],
  "scopes": {
    "id": semantic.id.NominalId(u32)(0), 
    "flags": [
      "top", 
      
    ], 
    "bindings": {
      "@This()": 0, 
      "Foo": 1, 
      
    }, 
    "children": [
      {
        "id": semantic.id.NominalId(u32)(1), 
        "flags": [
          "block", 
          
        ], 
        "bindings": {
          "a": 2, 
          "b": 3, 
          "c": 4, 
          "Bar": 5, 
          "isNotA": 6, 
          
        }, 
        "children": [
          {
            "id": semantic.id.NominalId(u32)(2), 
            "flags": [
              
            ], 
            "bindings": {
              
            }, 
            "children": [
              {
                "id": semantic.id.NominalId(u32)(3), 
                "flags": [
                  "function", 
                  
                ], 
                "bindings": {
                  
                }, 
                "children": [
                  {
                    "id": semantic.id.NominalId(u32)(4), 
                    "flags": [
                      "block", 
                      
                    ], 
                    "bindings": {
                      
                    }, 
                    "children": [], 
                    
                  }, 
                ], 
                
              }, 
            ], 
            
          }, 
        ], 
        
      }, 
    ], 
    
  }, 
}