{
  "symbols": [
    {
      "name": "", 
      "debugName": "@This()", 
      "declNode": "root", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": ["const"], 
      "references": [
        
      ], 
      "members": [1,2,3,4], 
      "exports": [], 
      
    }, 
    {
      "name": "std", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": [], 
      "references": [
        {"symbol":1,"scope":4,"node":"identifier","identifier":"std","flags":["read"]}, 
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "bad", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": [], 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "good", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": [], 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "Foo", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(0), 
      "flags": [], 
      "references": [
        {"symbol":4,"scope":2,"node":"identifier","identifier":"Foo","flags":["read"]}, 
        
      ], 
      "members": [5,6,7], 
      "exports": [], 
      
    }, 
    {
      "name": "foo", 
      "debugName": "", 
      "declNode": "container_field_init", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": ["member"], 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "Bar", 
      "debugName": "", 
      "declNode": "simple_var_decl", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": [], 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "baz", 
      "debugName": "", 
      "declNode": "fn_decl", 
      "scope": semantic.id.NominalId(u32)(1), 
      "flags": ["fn"], 
      "references": [
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
    {
      "name": "self", 
      "debugName": "", 
      "declNode": "ptr_type_aligned", 
      "scope": semantic.id.NominalId(u32)(2), 
      "flags": ["const", "fn_param"], 
      "references": [
        {"symbol":8,"scope":4,"node":"identifier","identifier":"self","flags":["read"]}, 
        
      ], 
      "members": [], 
      "exports": [], 
      
    }, 
  ], 
  "unresolvedReferences": [
    {"symbol":null,"scope":0,"node":"identifier","identifier":"undefined","flags":["read"]}, 
    {"symbol":null,"scope":0,"node":"identifier","identifier":"null","flags":["read"]}, 
    {"symbol":null,"scope":1,"node":"identifier","identifier":"undefined","flags":["read"]}, 
    
  ], 
  "scopes": {
    "id": semantic.id.NominalId(u32)(0), 
    "flags": ["top"], 
    "bindings": {
      "@This()": 0, 
      "std": 1, 
      "bad": 2, 
      "good": 3, 
      "Foo": 4, 
      
    }, 
    "children": [
      {
        "id": semantic.id.NominalId(u32)(1), 
        "flags": ["block"], 
        "bindings": {
          "foo": 5, 
          "Bar": 6, 
          "baz": 7, 
          
        }, 
        "children": [
          {
            "id": semantic.id.NominalId(u32)(2), 
            "flags": [], 
            "bindings": {
              "self": 8, 
              
            }, 
            "children": [
              {
                "id": semantic.id.NominalId(u32)(3), 
                "flags": ["function"], 
                "bindings": {
                  
                }, 
                "children": [
                  {
                    "id": semantic.id.NominalId(u32)(4), 
                    "flags": ["block"], 
                    "bindings": {
                      
                    }, 
                    "children": [], 
                    
                  }, 
                ], 
                
              }, 
            ], 
            
          }, 
        ], 
        
      }, 
    ], 
    
  }, 
}