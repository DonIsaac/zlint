"use strict";(self.webpackChunkzlint=self.webpackChunkzlint||[]).push([[937],{4568:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"configuration/ignore","title":"Ignoring Files and Rules","description":"ZLint provides several ways to ignore files and specific rules, each with varying","source":"@site/docs/configuration/ignore.md","sourceDirName":"configuration","slug":"/configuration/ignore","permalink":"/zlint/docs/configuration/ignore","draft":false,"unlisted":false,"editUrl":"https://github.com/DonIsaac/zlint/tree/main/apps/site/docs/configuration/ignore.md","tags":[],"version":"current","frontMatter":{"id":"ignore","title":"Ignoring Files and Rules"},"sidebar":"docs","previous":{"title":"Configuration","permalink":"/zlint/docs/configuration/"},"next":{"title":"Contributing","permalink":"/zlint/docs/contributing/"}}');var t=i(4848),o=i(8453);const l={id:"ignore",title:"Ignoring Files and Rules"},r=void 0,a={},d=[{value:"Ignoring Whole Files",id:"ignoring-whole-files",level:2},{value:"Disabling Rules",id:"disabling-rules",level:2},{value:"Disabling Rules for a Single File",id:"disabling-rules-for-a-single-file",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"ZLint provides several ways to ignore files and specific rules, each with varying\ndegrees of granularity."}),"\n",(0,t.jsx)(n.h2,{id:"ignoring-whole-files",children:"Ignoring Whole Files"}),"\n",(0,t.jsxs)(n.p,{children:["ZLint respects ",(0,t.jsx)(n.code,{children:".gitignore"})," files by default; no files ignored by git will be\nlinted."]}),"\n",(0,t.jsxs)(n.p,{children:["To ignore additional files, provide a list of glob patterns in the ",(0,t.jsx)(n.code,{children:"ignore"}),"\nfield of your ",(0,t.jsx)(n.code,{children:"zlint.json"})," file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  "ignore": ["src/test/**"],\n  "rules": { /* ... */ }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"disabling-rules",children:"Disabling Rules"}),"\n",(0,t.jsxs)(n.p,{children:["You can globally disable rules by setting their level to ",(0,t.jsx)(n.code,{children:"off"})," in your\nconfiguration file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  "rules": {\n    "unused-decls": "off"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"disabling-rules-for-a-single-file",children:"Disabling Rules for a Single File"}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.a,{href:"https://eslint.org/docs/latest/user-guide/configuring/ignoring-code",children:"ESLint-style disable\ndirectives"}),"\nto disable one or more rules for a single file. Put a ",(0,t.jsx)(n.code,{children:"// zlint-disable"})," comment\nat the top of your file to disable all rules, or add a list of rules to disable.\nYou may put arbitrary text after ",(0,t.jsx)(n.code,{children:"--"})," to explain why you're disabling the rules\nif you want."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-zig",metastring:'title="src/bad.zig"',children:'// zlint-disable unused-decls, unsafe-undefined -- this is an optional explanation\n\nconst std = @import("std");\n// highlight-next-line\nconst unused = @import("./foo.zig"); // would normally be reported by `unused-decls`\n\nfn foo() u32 {\n  // highlight-next-line\n  var x: u32 = undefined; // would normally be reported by `unsafe-undefined`\n  return x;\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Next-line disable directives are not yet supported. Track issue\n",(0,t.jsx)(n.a,{href:"https://github.com/DonIsaac/zlint/issues/184",children:"#184"})," for updates."]})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var s=i(6540);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);