"use strict";(self.webpackChunkzlint=self.webpackChunkzlint||[]).push([[3397],{1184:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(4041);const r={},l=s.createContext(r);function o(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(l.Provider,{value:n},e.children)}},2163:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"rules/line-length","title":"line-length","description":"What This Rule Does","source":"@site/docs/rules/line-length.mdx","sourceDirName":"rules","slug":"/rules/line-length","permalink":"/zlint/docs/rules/line-length","draft":false,"unlisted":false,"editUrl":"https://github.com/DonIsaac/zlint/tree/main/apps/site/docs/rules/line-length.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"homeless-try","permalink":"/zlint/docs/rules/homeless-try"},"next":{"title":"must-return-ref","permalink":"/zlint/docs/rules/must-return-ref"}}');var r=t(1085),l=t(1184);const o={},i="line-length",c={},a=[{value:"What This Rule Does",id:"what-this-rule-does",level:2},{value:"Examples",id:"examples",level:2},{value:"Configuration",id:"configuration",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{RuleBanner:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RuleBanner",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"line-length",children:(0,r.jsx)(n.code,{children:"line-length"})})}),"\n",(0,r.jsx)(t,{category:"style",default:"off"}),"\n",(0,r.jsx)(n.h2,{id:"what-this-rule-does",children:"What This Rule Does"}),"\n",(0,r.jsx)(n.p,{children:"Checks if any line goes beyond a given number of columns."}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["Examples of ",(0,r.jsx)(n.strong,{children:"incorrect"})," code for this rule (with a threshold of 120 columns):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zig",children:'const std = @import("std");\nconst longStructDeclarationInOneLine = struct { max_length: u32 = 120, a: usize = 123, b: usize = 12354, c: usize = 1234352 };\nfn reallyExtraVerboseFunctionNameToThePointOfBeingACodeSmellAndProbablyAHintThatYouCanGetAwayWithAnotherNameOrSplittingThisIntoSeveralFunctions() u32 {\n    return 123;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Examples of ",(0,r.jsx)(n.strong,{children:"correct"})," code for this rule (with a threshold of 120 columns):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zig",children:'const std = @import("std");\nconst longStructInMultipleLines = struct {\n    max_length: u32 = 120,\n    a: usize = 123,\n    b: usize = 12354,\n    c: usize = 1234352,\n};\nfn Get123Constant() u32 {\n    return 123;\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"This rule accepts the following options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"max_length: int"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);