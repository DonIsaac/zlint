"use strict";(self.webpackChunkzlint=self.webpackChunkzlint||[]).push([[545],{2697:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"configuration/index","title":"Configuration","description":"Create a zlint.json file in the same directory as build.zig. This disables","source":"@site/docs/configuration/index.md","sourceDirName":"configuration","slug":"/configuration/","permalink":"/zlint/docs/configuration/","draft":false,"unlisted":false,"editUrl":"https://github.com/DonIsaac/zlint/tree/main/apps/site/docs/configuration/index.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Getting Started","permalink":"/zlint/docs/getting-started"},"next":{"title":"Ignoring Files and Rules","permalink":"/zlint/docs/configuration/ignore"}}');var t=i(4848),o=i(8453);const r={sidebar_position:3},l="Configuration",a={},c=[{value:"Configuring Rules",id:"configuring-rules",level:3},{value:"Skipping Files",id:"skipping-files",level:3},{value:"Intellisense",id:"intellisense",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(e.p,{children:["Create a ",(0,t.jsx)(e.code,{children:"zlint.json"})," file in the same directory as ",(0,t.jsx)(e.code,{children:"build.zig"}),". This disables\nall default rules, only enabling the ones you choose."]}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"zlint.json"})," does not yet support comments or trailing commas yet."]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  "rules": {\n    "unsafe-undefined": "error",\n    "homeless-try": "warn",\n    "unused-decls": "off"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"configuring-rules",children:"Configuring Rules"}),"\n",(0,t.jsxs)(e.p,{children:["Some rules accept configuration options. To pass them, provide an ",(0,t.jsx)(e.code,{children:"[level, config]"})," tuple."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  "rules": {\n    "unsafe-undefined": ["error", { "allowed_types": ["PathBuf"] }]\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"skipping-files",children:"Skipping Files"}),"\n",(0,t.jsxs)(e.p,{children:["To skip linting specific files or groups of files, use the ",(0,t.jsx)(e.code,{children:"ignore"})," field."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  "ignore": ["src/bad.zig", "src/subfolder/**"],\n  "rules": {\n    "unsafe-undefined": "error"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsxs)(e.p,{children:["See ",(0,t.jsx)(e.a,{href:"/zlint/docs/configuration/ignore",children:"Ignoring Files"})," for more details, including on how to\ndisable specific rules for a single file."]})}),"\n",(0,t.jsx)(e.h2,{id:"intellisense",children:"Intellisense"}),"\n",(0,t.jsxs)(e.p,{children:["If you don't use ZLint's ",(0,t.jsx)(e.a,{href:"https://marketplace.visualstudio.com/items?itemName=disaac.zlint-vscode",children:"VSCode Extension"}),",\nyou can get intellisense by linking directly to our ",(0,t.jsx)(e.a,{href:"https://raw.githubusercontent.com/DonIsaac/zlint/refs/heads/main/zlint.schema.json",children:"JSON Schema"}),"."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  // highlight-next-line\n  "$schema": "https://raw.githubusercontent.com/DonIsaac/zlint/refs/heads/main/zlint.schema.json",\n  "rules": {\n    "unsafe-undefined": "error",\n    "homeless-try": "warn"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:"Instead of using the schema directly from main, you can lock it to the specific version you use."}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsx)(e.p,{children:"When copying the below snippet, make sure you swap in the version of ZLint you are using!"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:'title="zlint.json"',children:'{\n  // highlight-next-line\n  "$schema": "https://raw.githubusercontent.com/DonIsaac/zlint/refs/tags/v0.7.7/zlint.schema.json",\n  "rules": {\n    "unsafe-undefined": "error",\n    "homeless-try": "warn"\n  }\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>l});var s=i(6540);const t={},o=s.createContext(t);function r(n){const e=s.useContext(o);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);