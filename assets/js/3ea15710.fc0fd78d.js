"use strict";(self.webpackChunkzlint=self.webpackChunkzlint||[]).push([[702],{5690:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"rules/empty-file","title":"empty-file","description":"What This Rule Does","source":"@site/docs/rules/empty-file.mdx","sourceDirName":"rules","slug":"/rules/empty-file","permalink":"/zlint/docs/rules/empty-file","draft":false,"unlisted":false,"editUrl":"https://github.com/DonIsaac/zlint/tree/main/apps/site/docs/rules/empty-file.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"case-convention","permalink":"/zlint/docs/rules/case-convention"},"next":{"title":"homeless-try","permalink":"/zlint/docs/rules/homeless-try"}}');var i=t(4848),r=t(8453);const o={},l="empty-file",c={},a=[{value:"What This Rule Does",id:"what-this-rule-does",level:2},{value:"Examples",id:"examples",level:2},{value:"Configuration",id:"configuration",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components},{RuleBanner:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RuleBanner",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"empty-file",children:(0,i.jsx)(n.code,{children:"empty-file"})})}),"\n",(0,i.jsx)(t,{category:"style",default:"warning"}),"\n",(0,i.jsx)(n.h2,{id:"what-this-rule-does",children:"What This Rule Does"}),"\n",(0,i.jsxs)(n.p,{children:["This rule checks for empty .zig files in the project.\nA file should be deemed empty if it has no content (zero bytes) or only comments and whitespace characters,\nas defined by the standard library in ",(0,i.jsx)(n.a,{href:"https://ziglang.org/documentation/master/std/#std.ascii.whitespace",children:(0,i.jsx)(n.code,{children:"std.ascii.whitespace"})}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["Examples of ",(0,i.jsx)(n.strong,{children:"incorrect"})," code for this rule:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zig",children:'// an "empty" file is actually a file without meaningful code: just comments (doc or normal) or whitespace\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Examples of ",(0,i.jsx)(n.strong,{children:"correct"})," code for this rule:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zig",children:"fn exampleFunction() void {\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"This rule has no configuration."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);